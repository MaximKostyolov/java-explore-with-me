{
  "info": {
    "_postman_id": "f1a184c6-6318-438c-a8ce-1d26c31bff0c",
    "name": "Test Explore With Me - Feature subsriptions",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "24809047"
  },
  "item": [
    {
      "name": "Create subsriptions",
      "item": [
        {
          "name": "Add user1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "var json = pm.response.json();\r",
                  "pm.environment.set(\"user1 Id\", json.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"email1@email.com\",\r\n    \"name\": \"name1\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add user2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "var json = pm.response.json();\r",
                  "pm.environment.set(\"user2 Id\", json.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"email2@email.com\",\r\n    \"name\": \"name2\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add user3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "var json = pm.response.json();\r",
                  "pm.environment.set(\"user3 Id\", json.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"email3@email.com\",\r\n    \"name\": \"name3\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add following from user2 to user1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test following[0] 'id' field\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.followings[0]).to.have.property('id');\r",
                  "    pm.expect(jsonData.followings[0].id, '\"id\" must be user1 Id').to.eql(pm.variables.get(\"user1 Id\"));\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\": {{user1 Id}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{user2 Id}}/following",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{user2 Id}}",
                "following"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add following from user2 to user3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test following[1] 'id' field\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.followings[1]).to.have.property('id');\r",
                  "    pm.expect(jsonData.followings[1].id, '\"id\" must be user3 Id').to.eql(pm.variables.get(\"user3 Id\"));\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\": {{user3 Id}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{user2 Id}}/following",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{user2 Id}}",
                "following"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Get following events",
      "item": [
        {
          "name": "Create category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "var json = pm.response.json();\r",
                  "pm.environment.set(\"category Id\", json.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"category\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "categories"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create event",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "var json = pm.response.json();\r",
                  "pm.environment.set(\"event Id\", json.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"title\": \"title\",\r\n    \"annotation\": \"annotation annotation annotation\",\r\n    \"description\": \"description description description description description\",\r\n    \"category\": {{category Id}},\r\n    \"eventDate\": \"2023-08-01 12:00:00\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{user1 Id}}/events",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{user1 Id}}",
                "events"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get following events from user1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test list event response\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test event[0] 'id' field\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData[0]).to.have.property('id');\r",
                  "    pm.expect(jsonData[0].id, '\"id\" must be event Id').to.eql(pm.variables.get(\"event Id\"));\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{user2 Id}}/events/following",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{user2 Id}}",
                "events",
                "following"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Delete subsriptions",
      "item": [
        {
          "name": "Delete following from user2 to user1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
                  "    pm.response.to.have.status(204);\r",
                  "})"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{user2 Id}}/following/{{user1 Id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{user2 Id}}",
                "following",
                "{{user1 Id}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get user2 and check following",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test followings[0] 'id' field\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('followings');\r",
                  "    pm.expect(jsonData.followings[0]).to.have.property('id');\r",
                  "    pm.expect(jsonData.followings[0].id, '\"id\" must be user3 Id').to.eql(pm.variables.get(\"user3 Id\"));\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/users/{{user2 Id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "users",
                "{{user2 Id}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create subsription to himself",
      "item": [
        {
          "name": "Add following from user1 to user1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 409\", function () {\r",
                  "    pm.response.to.have.status(409);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\": {{user1 Id}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{user1 Id}}/following",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{user1 Id}}",
                "following"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "user1 Id",
      "value": "",
      "type": "string"
    },
    {
      "key": "user2 Id",
      "value": "",
      "type": "string"
    },
    {
      "key": "user3 Id",
      "value": "",
      "type": "string"
    },
    {
      "key": "event Id",
      "value": "",
      "type": "string"
    },
    {
      "key": "category Id",
      "value": "",
      "type": "string"
    }
  ]
}